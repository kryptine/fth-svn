#! @prefix@/bin/@prog_name@ -s
\ @configure_input@
\ fth-test.fth -- object-type tests

\ Copyright (c) 2005-2019 Michael Scholz <mi-scholz@users.sourceforge.net>
\ All rights reserved.
\
\ Redistribution and use in source and binary forms, with or without
\ modification, are permitted provided that the following conditions
\ are met:
\ 1. Redistributions of source code must retain the above copyright
\    notice, this list of conditions and the following disclaimer.
\ 2. Redistributions in binary form must reproduce the above copyright
\    notice, this list of conditions and the following disclaimer in the
\    documentation and/or other materials provided with the distribution.
\
\ THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
\ ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
\ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
\ ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
\ FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
\ DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
\ OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
\ HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
\ LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
\ OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
\ SUCH DAMAGE.
\
\ @(#)fth-test.fth.in	1.35 11/28/19

\ Commentary:
\
\ Usage: ./fth-test.fth [-v] [-n count | count]
\        ./fth-test.fth		\ each test one time
\        ./fth-test.fth 100	\ each test 100 times
\        ./fth-test.fth -n 100	\ each test 100 times
\        ./fth-test.fth -v	\ each test one times, verbose
\        ./fth-test.fth -vn 100	\ each test 100 times, verbose

\ Code:

1 value test-count

let: ( -- )
	#t to opterr	\ getopt prints error message
	begin
		*argv* "n:v" getopt ( ch ) dup
	while ( ch )
		case
			<char> n of
				optarg string->number to test-count
			endof
			<char> v of
				#t to *fth-verbose*
			endof
			<char> ? of
				." usage: fth-test [-v] [-n count | count]" cr
				1 (bye)
			endof
		endcase
	repeat drop ( ch )
	optind 0 ?do *argv* array-shift drop loop
	*argv* array-length to *argc*
	*argv* length 0> if
		*argv* last-ref string->number to test-count
	then
;let

\ Loading test files should not run their test loops, we run them.
0 value *fth-test-count*

: test-expr <{ expr info -- }>
	expr if
		"\\ %s: %s\n" #( info expr ) fth-print
		'test-failed nil fth-throw
	then
;

"@top_srcdir@/tests" file-realpath add-load-path

require array-test.fs
require list-test.fs
require hash-test.fs
require io-test.fs
require file-test.fs
require misc-test.fs
require numbers-test.fs
require proc-test.fs
require hook-test.fs
require string-test.fs
require regexp-test.fs
require symbol-test.fs

: run-fth-test { xt cnt -- }
	*fth-verbose* if
		"\\ *** execute %s ...\n" #( xt xt->name ) fth-print
	then
	cnt 0 ?do
		xt #t nil fth-catch if
			stack-reset
			leave
		then
	loop
	.stack
;

stack-reset

*fth-verbose* [if]
	make-timer value tm
	tm start-timer
	cr
[then]

<'>  array-test test-count run-fth-test
<'>   list-test test-count run-fth-test
<'>   hash-test test-count run-fth-test
<'>     io-test test-count 10 min run-fth-test
<'>   file-test test-count 10 min run-fth-test
<'>   misc-test test-count run-fth-test
<'> number-test test-count run-fth-test
<'>   proc-test test-count run-fth-test
<'>   hook-test test-count run-fth-test
<'> string-test test-count run-fth-test
<'> regexp-test test-count run-fth-test
<'> symbol-test test-count run-fth-test

*fth-verbose* [if]
	cr
	tm stop-timer
	"summary: %s\n" #( tm ) fth-display
	gc-stats
	.memory cr cr
[then]

bye

\ fth-test.fth.in ends here
